server:
  port: 8100
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
spring:
  application:
    name: book-service
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/book_service?useTimezone=true&serverTimezone=UTC
    username: sgs
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
  jackson:
    default-property-inclusion: non_null
    serialization:
      fail-on-empty-beans: false
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
  flyway:
    enabled: true
    url: jdbc:mysql://127.0.0.1:3306/book_service
    schemas: book_service
    user: sgs
    locations: classpath:db/migration
    baseline-on-migrate: true
  management:
    tracing:
      sampling:
        probability: 1.0
    zipkin:
      tracing:
        endpoint: http://localhost:9411/api/v2/spans
springdoc:
  api-docs:
    enabled: true
    path: /book-service/v3/api-docs
#  swagger-ui:
#    path: /book-service/swagger-ui.html
#    urls:
#      - name: book-service
#        url: /book-service/v3/api-docs
resilience4j:
  bulkhead:
    instances:
      default:
        max-concurrent-calls: 10
  #        max-wait-duration: 10s
  #        timeout-duration: 10s
  ratelimiter:
    instances:
      default:
        limit-for-period: 2
        limit-refresh-period: 10s
  #        timeout-duration: 10s
  #        enable-exponential-backoff: true
  retry:
    instances:
      foo-bar:
        max-attempts: 5
        wait-duration: 1s
        enable-exponential-backoff: true
#        retry-exceptions:
#          - java.io.IOException
#          - java.util.concurrent.TimeoutException
#        ignore-exceptions:
#          - java.lang.RuntimeException
#          - java.lang.IllegalArgumentException
#        retry-on-result:
#          - result: 404
#            retry-exceptions:
#              - java.io.IOException
#          - result: 500
#            retry-exceptions:
#              - java.io.IOException
#        retry-on-exception:
#          - exception: java.io.IOException
#            retry-exceptions:
#              - java.util.concurrent.TimeoutException
#          - exception: java.util.concurrent.TimeoutException
#            retry-exceptions:
#              - java.io.IOException
#  circuitbreaker:
#    instances:
#      default:
#        register-health-indicator: true
#        sliding-window-size: 10
#        minimum-number-of-calls: 5
#        permitted-number-of-calls-in-half-open-state: 3
#        automatic-transition-from-open-to-half-open-enabled: true
#        wait-duration-in-open-state: 5s
#        failure-rate-threshold: 50
#        event-consumer-buffer-size: 10
#        record-exceptions:
#          - java.lang.RuntimeException
#        ignore-exceptions:
#          - java.lang.IllegalArgumentException
#          - java.lang.IllegalStateException
#        record-failure-predicate: (exception) -> true
#        record-exceptions-with-stack-trace: 0
#        record-failure-with-stack-trace: 0
